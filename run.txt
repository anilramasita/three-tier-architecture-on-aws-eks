
1. eksctl create cluster --name demo-cluster-three-tier-1 --region us-east-1
2. export cluster_name=demo-cluster-three-tier-1
3. oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
4. aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
5. eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve
6. curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.11.0/docs/install/iam_policy.json
7. aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
8. eksctl create iamserviceaccount \
  --cluster=demo-cluster-three-tier-1 \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::YOUR_AWS_ACCOUNT_ID:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve

9. helm repo add eks https://aws.github.io/eks-charts
10. helm repo update eks
11. helm install aws-load-balancer-controller eks/aws-load-balancer-controller  -n kube-system  --set clusterName=demo-cluster-three-tier-1  --set serviceAccount.create=false  --set serviceAccount.name=aws-load-balancer-controller  --set region=us-east-1  --set vpcId=YOUR_VPC_ID
12. kubectl get deployment -n kube-system aws-load-balancer-controller
13. eksctl create iamserviceaccount \
    --name ebs-csi-controller-sa \
    --namespace kube-system \
    --cluster demo-cluster-three-tier-1 \
    --role-name AmazonEKS_EBS_CSI_DriverRole \
    --role-only \
    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
    --approve
14. eksctl create addon --name aws-ebs-csi-driver --cluster demo-cluster-three-tier-1 --service-account-role-arn arn:aws:iam::YOUR_AWS_ACCOUNT_ID:role/AmazonEKS_EBS_CSI_DriverRole --force
15. kubectl create ns robot-shop
16. cd EKS
17. cd helm
18. helm install robot-shop --namespace robot-shop .
19. wait 5 min
20. kubectl get pods -n robot-shop
21. kubectl apply -f ingress.yaml
22. kubectl get ingress -n robot-shop


23. eksctl delete cluster --name demo-cluster-three-tier-1 --region us-east-1
